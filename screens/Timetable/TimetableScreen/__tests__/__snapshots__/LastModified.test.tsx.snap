// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LastUpdated does not render if date is missing 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <TouchableOpacity
          style={Object {}}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#4D5061",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 1,
                  "marginTop": 1,
                },
                Object {
                  "color": "#2980b9",
                },
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "marginBottom": 5,
                    "marginTop": 5,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Last updated just now
            </Text>
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <TouchableOpacity
        style={Object {}}
      >
        <Text
          style={
            Array [
              Object {
                "color": "#4D5061",
                "fontFamily": "apercu",
                "fontSize": 16,
                "marginBottom": 1,
                "marginTop": 1,
              },
              Object {
                "color": "#2980b9",
              },
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#6E707F",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 5,
                  "marginTop": 5,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Last updated just now
          </Text>
        </Text>
      </TouchableOpacity>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`LastUpdated does not show error when data is more recent than date 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <TouchableOpacity
          style={Object {}}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#4D5061",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 1,
                  "marginTop": 1,
                },
                Object {
                  "color": "#2980b9",
                },
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "marginBottom": 5,
                    "marginTop": 5,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Last updated 2 months ago
            </Text>
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <TouchableOpacity
        style={Object {}}
      >
        <Text
          style={
            Array [
              Object {
                "color": "#4D5061",
                "fontFamily": "apercu",
                "fontSize": 16,
                "marginBottom": 1,
                "marginTop": 1,
              },
              Object {
                "color": "#2980b9",
              },
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#6E707F",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 5,
                  "marginTop": 5,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Last updated 2 months ago
          </Text>
        </Text>
      </TouchableOpacity>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`LastUpdated renders the LastModified component 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <TouchableOpacity
          style={Object {}}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#4D5061",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 1,
                  "marginTop": 1,
                },
                Object {
                  "color": "#2980b9",
                },
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "marginBottom": 5,
                    "marginTop": 5,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Last updated 11 hours ago
            </Text>
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <TouchableOpacity
        style={Object {}}
      >
        <Text
          style={
            Array [
              Object {
                "color": "#4D5061",
                "fontFamily": "apercu",
                "fontSize": 16,
                "marginBottom": 1,
                "marginTop": 1,
              },
              Object {
                "color": "#2980b9",
              },
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#6E707F",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 5,
                  "marginTop": 5,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Last updated 11 hours ago
          </Text>
        </Text>
      </TouchableOpacity>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`LastUpdated shows error when studyspace info is stale 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 20,
                "marginTop": 5,
              },
            ]
          }
        >
          <Text />
          <Text
            style={
              Array [
                Object {
                  "color": "rgba(215, 38, 61, 1)",
                  "flex": 1,
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 1,
                  "marginLeft": 5,
                  "marginTop": -1,
                },
                undefined,
              ]
            }
          >
            Our timetable data is stale. Sorry about that. We're working on getting this fixed as quickly as possible.
          </Text>
        </View>
        <TouchableOpacity
          style={Object {}}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#4D5061",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 1,
                  "marginTop": 1,
                },
                Object {
                  "color": "#2980b9",
                },
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "marginBottom": 5,
                    "marginTop": 5,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Last updated a day ago
            </Text>
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 20,
              "marginTop": 5,
            },
          ]
        }
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "color": "rgba(215, 38, 61, 1)",
                "flex": 1,
                "fontFamily": "apercu",
                "fontSize": 16,
                "marginBottom": 1,
                "marginLeft": 5,
                "marginTop": -1,
              },
              undefined,
            ]
          }
        >
          Our timetable data is stale. Sorry about that. We're working on getting this fixed as quickly as possible.
        </Text>
      </View>
      <TouchableOpacity
        style={Object {}}
      >
        <Text
          style={
            Array [
              Object {
                "color": "#4D5061",
                "fontFamily": "apercu",
                "fontSize": 16,
                "marginBottom": 1,
                "marginTop": 1,
              },
              Object {
                "color": "#2980b9",
              },
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#6E707F",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "marginBottom": 5,
                  "marginTop": 5,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Last updated a day ago
          </Text>
        </Text>
      </TouchableOpacity>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
